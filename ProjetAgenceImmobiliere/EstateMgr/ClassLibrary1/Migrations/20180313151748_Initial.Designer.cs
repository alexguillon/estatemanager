// <auto-generated />
using EstateMgrCore.DataAccess;
using EstateMgrCore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EstateMgrCore.Migrations
{
    [DbContext(typeof(AgencyDbContext))]
    [Migration("20180313151748_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("EstateMgrCore.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adrress");

                    b.Property<string>("City");

                    b.Property<double?>("Latitude");

                    b.Property<double?>("Longitude");

                    b.Property<int>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("EstateMgrCore.Models.Estate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<int>("FloorNumber");

                    b.Property<int>("FloorsCount");

                    b.Property<int>("OwnerId");

                    b.Property<int>("PropertyTax");

                    b.Property<int>("ReferentId");

                    b.Property<int>("RoomsCount");

                    b.Property<float>("Surface");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ReferentId");

                    b.ToTable("Estate");
                });

            modelBuilder.Entity("EstateMgrCore.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressId");

                    b.Property<string>("CellPhone");

                    b.Property<string>("FirstName");

                    b.Property<string>("Mail");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("EstateMgrCore.Models.Photos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Base64");

                    b.Property<int>("EstateId");

                    b.Property<DateTime>("ShootingDate");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("EstateId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("EstateMgrCore.Models.RentTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Fees");

                    b.Property<double>("Price");

                    b.HasKey("TransactionId");

                    b.ToTable("RentTransaction");
                });

            modelBuilder.Entity("EstateMgrCore.Models.SaleTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Fees");

                    b.Property<double>("Price");

                    b.HasKey("TransactionId");

                    b.ToTable("SaleTransaction");
                });

            modelBuilder.Entity("EstateMgrCore.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClientId");

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description");

                    b.Property<int>("EstateId");

                    b.Property<string>("Title");

                    b.Property<DateTime>("TransactionDate");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("EstateId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("EstateMgrCore.Models.Estate", b =>
                {
                    b.HasOne("EstateMgrCore.Models.Address", "AddressEstate")
                        .WithMany("Address_estates")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EstateMgrCore.Models.Person", "Owner")
                        .WithMany("Estates_Owner")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EstateMgrCore.Models.Person", "Referent")
                        .WithMany("Estates_Ref")
                        .HasForeignKey("ReferentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EstateMgrCore.Models.Person", b =>
                {
                    b.HasOne("EstateMgrCore.Models.Address", "AddressPerson")
                        .WithMany("Address_persons")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EstateMgrCore.Models.Photos", b =>
                {
                    b.HasOne("EstateMgrCore.Models.Estate", "EstatePhoto")
                        .WithMany("Estate_photos")
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EstateMgrCore.Models.RentTransaction", b =>
                {
                    b.HasOne("EstateMgrCore.Models.Transaction", "Transaction")
                        .WithMany("Rent_Transactions")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EstateMgrCore.Models.SaleTransaction", b =>
                {
                    b.HasOne("EstateMgrCore.Models.Transaction", "Transaction")
                        .WithMany("Sale_Transactions")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EstateMgrCore.Models.Transaction", b =>
                {
                    b.HasOne("EstateMgrCore.Models.Person", "ClientTransaction")
                        .WithMany("Transactions_client")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EstateMgrCore.Models.Estate", "EstateTransaction")
                        .WithMany("Estates_transactions")
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
